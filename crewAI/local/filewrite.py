import os
from crewai import Agent, Task, Crew, Process
from langchain_community.llms import Ollama

from crewai_tools import BaseTool

# Initialize the OpenAI LLM with the specific model
llama3 = Ollama(model='phi3')

class FileWriterTool(BaseTool):
    name: str = "FileWriter"
    description: str = "Writes given content to a specified file."

    def _run(self, filename: str, content: str) -> str:
        # Open the specified file in write mode and write the content
        with open(filename, 'w') as file:
            file.write(content)
        return f"Content successfully written to {filename}"

# Set up the FileWriterTool
file_writer = FileWriterTool()

# Define the agent with a role, goal, and tools
researcher = Agent(
    role='Knowledge Article Writer',
    goal='Create and save detailed content on professional domains to a file.',
    backstory="Passionate about crafting in-depth articles on Game Design.",
    verbose=True,
    allow_delegation=False,
    llm=llama3,
    tools=[file_writer]
)

# Create a task that utilizes the FileWriterTool to save content
task1 = Task(
    description="Write and save an article about game design using the FileWriter tool.",
    expected_output="A file named 'game_design_article.md' with the article content more than 1000 words.",
    agent=researcher,
    tools=[file_writer],
    function_args={'filename': 'game_design_article.md', 'content': 'Detailed content generated by LLM about game design.'}
)

# Instantiate the crew with a sequential process and execute the task
crew = Crew(
    agents=[researcher],
    tasks=[task1],
    process=Process.sequential,
    verbose=2
)

# Execute the crew tasks and print the result
result = crew.kickoff()
print("######################")
print(result)

